from django.db import models

# –ú–æ–¥–µ–ª—å –±–∞–Ω–Ω–µ—Ä–æ–≤ –Ω–∞ —Å–∞–π—Ç–µ
class PageBanner(models.Model):
    PAGE_CHOICES = [
        ('home', '–ì–ª–∞–≤–Ω–∞—è'),
        ('excursions', '–≠–∫—Å–∫—É—Ä—Å–∏–∏'),
        ('info_meeting', '–ò–Ω—Ñ–æ –≤—Å—Ç—Ä–µ—á–∞'),
        ('airport_transfer', '–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç'),
        ('ask', '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å'),
        ('contacts', '–ö–æ–Ω—Ç–∞–∫—Ç—ã'),
        ('about', '–û –Ω–∞—Å'),
    ]

    page = models.CharField(max_length=50, choices=PAGE_CHOICES, unique=True)
    image = models.ImageField(upload_to='uploads/banners/')
    title_ru = models.CharField(max_length=200, blank=True, null=True)
    title_en = models.CharField(max_length=200, blank=True, null=True)
    title_es = models.CharField(max_length=200, blank=True, null=True)
    title_uk = models.CharField(max_length=200, blank=True, null=True)
    title_et = models.CharField(max_length=200, blank=True, null=True)
    title_lv = models.CharField(max_length=200, blank=True, null=True)
    title_lt = models.CharField(max_length=200, blank=True, null=True)

    class Meta:
        verbose_name = "–ë–∞–Ω–Ω–µ—Ä"
        verbose_name_plural = "–ë–∞–Ω–Ω–µ—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü"  # —ç—Ç–æ —Ç–æ, —á—Ç–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω–∫–µ

    def __str__(self):
        return f"–ë–∞–Ω–Ω–µ—Ä –¥–ª—è: {self.page}"

# –ì–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
class Homepage(models.Model):
    title = models.CharField(max_length=255, verbose_name="–ó–∞–≥–æ–ª–æ–≤–æ–∫")
    subtitle = models.TextField(verbose_name="–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫")
    banner_image = models.ImageField(upload_to='uploads/homepage/', verbose_name="–ë–∞–Ω–Ω–µ—Ä")

    def __str__(self):
        return "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"

    class Meta:
        verbose_name = "–ì–ª–∞–≤–Ω–∞—è"
        verbose_name_plural = "–ì–ª–∞–≤–Ω–∞—è"

# –ò–Ω—Ñ–æ –≤—Å—Ç—Ä–µ—á–∞
class InfoMeeting(models.Model):
    title = models.CharField(max_length=255)
    content = models.TextField()
    location = models.CharField(max_length=255, blank=True)

    date = models.DateField(blank=True, null=True)
    time = models.TimeField(blank=True, null=True)

    def __str__(self):
        return f"InfoMeeting on {self.date} at {self.time}"

    class Meta:
        verbose_name = "–ò–Ω—Ñ–æ –≤—Å—Ç—Ä–µ—á–∞"
        verbose_name_plural = "–ò–Ω—Ñ–æ –≤—Å—Ç—Ä–µ—á–∏"


# –¢—Ä–∞–Ω—Å—Ñ–µ—Ä –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç 
class AirportTransfer(models.Model):
    description = models.TextField()
    pickup_location = models.CharField(max_length=255, blank=True)  # –Ω–æ–≤–æ–µ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ–µ –ø–æ–ª–µ
    departure_date = models.DateField(blank=True, null=True)
    departure_time = models.TimeField(blank=True, null=True)        # –ø–æ–ª–µ –≤—Ä–µ–º–µ–Ω–∏
    contact_email = models.EmailField()

    def __str__(self):
        return f"Airport Transfer Info"

    class Meta:
        verbose_name = "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç"
        verbose_name_plural = "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä—ã –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç"

# –î–µ—Ç–∞–ª—å–Ω—ã–π —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –æ—Ç–µ–ª—è–º
class TransferSchedule(models.Model):
    TRANSFER_TYPE_CHOICES = [
        ('group', '–ì—Ä—É–ø–ø–æ–≤–æ–π'),
        ('private', '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π'),
    ]

    transfer_type = models.CharField(
        max_length=10,
        choices=TRANSFER_TYPE_CHOICES,
        verbose_name="–¢–∏–ø —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞"
    )

    hotel = models.ForeignKey('Hotel', on_delete=models.CASCADE, verbose_name="–û—Ç–µ–ª—å")
    departure_date = models.DateField(verbose_name="–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞")
    departure_time = models.TimeField(verbose_name="–í—Ä–µ–º—è –≤—ã–µ–∑–¥–∞")

    pickup_point = models.ForeignKey('PickupPoint', on_delete=models.SET_NULL, null=True, blank=True, verbose_name="–¢–æ—á–∫–∞ —Å–±–æ—Ä–∞")

    # –¢–æ–ª—å–∫–æ –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞:
    passenger_last_name = models.CharField(max_length=100, blank=True, verbose_name="–§–∞–º–∏–ª–∏—è —Ç—É—Ä–∏—Å—Ç–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)")

    def __str__(self):
        return f"{self.get_transfer_type_display()} | {self.hotel.name} | {self.departure_date}"

    class Meta:
        verbose_name = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞"
        verbose_name_plural = "–†–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–æ–≤"
        ordering = ['departure_date', 'departure_time']


# –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å
class Question(models.Model):
    name = models.CharField(max_length=100)
    email = models.EmailField()
    message = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"Question from {self.name}"

    class Meta:
        verbose_name = "–í–æ–ø—Ä–æ—Å"
        verbose_name_plural = "–í–æ–ø—Ä–æ—Å—ã"

# –ö–æ–Ω—Ç–∞–∫—Ç—ã
class ContactInfo(models.Model):
    office_name = models.CharField(max_length=100)
    email = models.EmailField()
    phone = models.CharField(max_length=50)
    whatsapp = models.CharField(max_length=50, blank=True)
    address = models.TextField()

    def __str__(self):
        return self.office_name

    class Meta:
        verbose_name = "–ö–æ–Ω—Ç–∞–∫—Ç"
        verbose_name_plural = "–ö–æ–Ω—Ç–∞–∫—Ç—ã"

# –û –Ω–∞—Å
class AboutUs(models.Model):
    title = models.CharField(max_length=255)
    description = models.TextField()
    photo = models.ImageField(upload_to='about/', blank=True)

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = "–û –Ω–∞—Å"
        verbose_name_plural = "–û –Ω–∞—Å"

# –†–µ–≥–∏–æ–Ω—ã
class Region(models.Model):
    name = models.CharField(max_length=100, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞")

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = "–†–µ–≥–∏–æ–Ω"
        verbose_name_plural = "–†–µ–≥–∏–æ–Ω—ã"

# –û—Ç–µ–ª–∏
class Hotel(models.Model):
    name = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è")
    address = models.TextField(blank=True, null=True, verbose_name="–ê–¥—Ä–µ—Å")
    latitude = models.FloatField(blank=True, null=True, verbose_name="–®–∏—Ä–æ—Ç–∞")
    longitude = models.FloatField(blank=True, null=True, verbose_name="–î–æ–ª–≥–æ—Ç–∞")

    pickup_point = models.ForeignKey(
        'PickupPoint',
        on_delete=models.SET_NULL,
        null=True,
        blank=True,
        related_name='related_hotel',  # üëà –¥–æ–±–∞–≤–ª–µ–Ω–æ
        verbose_name="–¢–æ—á–∫–∞ —Å–±–æ—Ä–∞"
    )

    hotel = models.OneToOneField(
        'Hotel',
        on_delete=models.CASCADE,
        related_name='assigned_pickup_point',
        verbose_name='–û—Ç–µ–ª—å (–¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞)',
        null=True,  # <--- –¥–æ–±–∞–≤—å —ç—Ç–æ!
        blank=True
    )

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = "–û—Ç–µ–ª—å"
        verbose_name_plural = "–û—Ç–µ–ª–∏"

# –ú–æ–¥–µ–ª—å —Ç–æ—á–∫–∏ —Å–±–æ—Ä–∞ 
class PickupPoint(models.Model):
    name = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ—á–∫–∏ —Å–±–æ—Ä–∞")
    location_description = models.TextField(blank=True, null=True, verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ/–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ")
    latitude = models.FloatField(verbose_name="–®–∏—Ä–æ—Ç–∞")
    longitude = models.FloatField(verbose_name="–î–æ–ª–≥–æ—Ç–∞")
    region = models.CharField(max_length=100, verbose_name="–†–µ–≥–∏–æ–Ω")
    hotel = models.OneToOneField(
        'Hotel',
        on_delete=models.CASCADE,
        verbose_name="–û—Ç–µ–ª—å",
        related_name='pickup_transfer',
        null=True,
        blank=True
    )

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = "–¢–æ—á–∫–∞ —Å–±–æ—Ä–∞"
        verbose_name_plural = "–¢–æ—á–∫–∏ —Å–±–æ—Ä–∞"

# –≠–∫—Å–∫—É—Ä—Å–∏–∏
class Excursion(models.Model):
    DAYS_OF_WEEK = [
        ('mon', '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'),
        ('tue', '–í—Ç–æ—Ä–Ω–∏–∫'),
        ('wed', '–°—Ä–µ–¥–∞'),
        ('thu', '–ß–µ—Ç–≤–µ—Ä–≥'),
        ('fri', '–ü—è—Ç–Ω–∏—Ü–∞'),
        ('sat', '–°—É–±–±–æ—Ç–∞'),
        ('sun', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'),
    ]

    DIRECTION_CHOICES = [
        ('MALAGA_TO_GIB', '–û—Ç –ú–∞–ª–∞–≥–∏ –∫ –ì–∏–±—Ä–∞–ª—Ç–∞—Ä—É'),
        ('GIB_TO_MALAGA', '–û—Ç –ì–∏–±—Ä–∞–ª—Ç–∞—Ä–∞ –∫ –ú–∞–ª–∞–≥–µ'),
    ]
    direction = models.CharField(
        max_length=20,
        choices=DIRECTION_CHOICES,
        default='MALAGA_TO_GIB',
        verbose_name="–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞"
    )

    title = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ")
    description = models.TextField(verbose_name="–û–ø–∏—Å–∞–Ω–∏–µ")
    duration = models.PositiveIntegerField(verbose_name="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—á–∞—Å—ã)")
    image = models.ImageField(upload_to='excursions/', blank=True, null=True, verbose_name="–ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
    days = models.JSONField(verbose_name="–î–Ω–∏ –Ω–µ–¥–µ–ª–∏", help_text="–°–ø–∏—Å–æ–∫ –¥–Ω–µ–π: mon, tue –∏ —Ç.–¥.")
    is_active = models.BooleanField(default=True, verbose_name="–ê–∫—Ç–∏–≤–Ω–∞")

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = "–≠–∫—Å–∫—É—Ä—Å–∏—è"
        verbose_name_plural = "–≠–∫—Å–∫—É—Ä—Å–∏–∏"

